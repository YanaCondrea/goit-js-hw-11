{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/img/error.svg","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export function httpRequest(key, searchText) {\n  return  fetch( `https://pixabay.com/api/?key=${key}&q=${searchText}&image_type=photo&orientation=horisontal&safesearch=true`)\n}","export default \"__VITE_ASSET__8479b7dd__\"","\nexport function createMurkup(array) {\n\n    return array.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n        \n  `<li class=\"list-item\">\n  <a class=\"list-item-link\" href=\"${largeImageURL}\">\n    <img\n      class=\"list-item-image\"\n      src=\"${webformatURL}\"\n      alt=\"${tags}\"\n    />\n  </a>\n  <ul class=\"wrap-in-list-item\">\n            <li item-in-wrap>\n              <h3 class=\"item-in-wrap-title\">Likes</h3>\n              <p class=\"item-in-wrap-text\">${likes}</p>\n            </li>\n            <li item-in-wrap>\n              <h3 class=\"item-in-wrap-title\">Views</h3>\n              <p class=\"item-in-wrap-text\">${views}</p>\n            </li>\n            <li item-in-wrap>\n              <h3 class=\"item-in-wrap-title\">Comments</h3>\n              <p class=\"item-in-wrap-text\">${comments}</p>\n            </li>\n            <li item-in-wrap>\n              <h3 class=\"item-in-wrap-title\">Downloads</h3>\n              <p class=\"item-in-wrap-text\">${downloads}</p>\n            </li>\n          </ul>\n  \n</li>`).join(\"\"); \n}","import { httpRequest } from \"./js/pixabay-api\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport  error  from \"./img/error.svg\";\nimport { createMurkup } from \"./js/render-functions\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\nconst key = '44769616-4ffe0cee5617f53d3e1075857';\n\n\n\n\n\nconst elements = {\n    form: document.querySelector('.search-form'),\n    list: document.querySelector('.list'),\n    input: document.querySelector('.search-input'),\n}\n\n\n\nelements.form.addEventListener('submit', searchQuery);\n\nfunction searchQuery(evt) {\n    evt.preventDefault();\n     elements.list.innerHTML = '';\n    const searchText = evt.target.elements.input.value.trim();\n    \n    if (searchText !== \"\") {\n        elements.form.insertAdjacentHTML(\"afterend\", ' <span class=\"loader\"></span>');\n        httpRequest(key, searchText)\n          .then(res => {\n        if (!res.ok) {\n          throw new Error(res.status);\n        }\n        return res.json();\n          })\n         .then((data) => {\n             const image = data.hits;\n             if (image.length !== 0) {\n                 \n    elements.list.insertAdjacentHTML(\"beforeend\", createMurkup(image));\n     let lightbox = new SimpleLightbox('.list a', {\n    \n\tcaptions: true,\n\tcaptionType: 'attr',\n\tcaptionsData: 'alt',\n\tcaptionPosition: 'bottom',\n\tcaptionDelay: 250\n     }); \n     lightbox.refresh();\n    } else {\n            iziToast.show({\n            backgroundColor: '#ef4040',\n            close: false,\n            closeOnClick: true,\n            progressBarColor: 'white',\n            title: 'Error',\n            titleColor: 'white',\n            iconUrl: error,\n            position: 'topRight',\n            icon: 'icon-error.svg',\n            messageColor: 'white',\n            messageSize: '16px',\n            message: '\"Sorry, there are no images matching your search query. Please try again!\"'\n        }); \n             }\n         })\n            .catch((err) => console.error(\"Fetch Error:\", err));\n        \n    } else {\n        iziToast.show({\n            backgroundColor: '#ef4040',\n            close: false,\n            closeOnClick: true,\n            progressBarColor: 'white',\n            title: 'Error',\n            titleColor: 'white',\n            iconUrl: error,\n            position: 'topRight',\n            icon: 'icon-error.svg',\n            messageColor: 'white',\n            messageSize: '16px',\n            message: 'Form field must be filled in'\n        });\n    }   \n    \n  \n}\n\n"],"names":["httpRequest","key","searchText","error","createMurkup","array","webformatURL","largeImageURL","tags","likes","views","comments","downloads","elements","searchQuery","evt","res","data","image","SimpleLightbox","iziToast","err"],"mappings":"6vBAAO,SAASA,EAAYC,EAAKC,EAAY,CAC3C,OAAQ,MAAO,gCAAgCD,CAAG,MAAMC,CAAU,0DAA0D,CAC9H,CCFA,MAAeC,EAAA,2CCCR,SAASC,EAAaC,EAAO,CAEhC,OAAOA,EAAM,IAAI,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAE5F;AAAA,oCACkCL,CAAa;AAAA;AAAA;AAAA,aAGpCD,CAAY;AAAA,aACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAM4BC,CAAK;AAAA;AAAA;AAAA;AAAA,6CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,6CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,6CAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,MAIhD,EAAE,KAAK,EAAE,CACf,CCxBA,MAAMX,EAAM,qCAMNY,EAAW,CACb,KAAM,SAAS,cAAc,cAAc,EAC3C,KAAM,SAAS,cAAc,OAAO,EACpC,MAAO,SAAS,cAAc,eAAe,CACjD,EAIAA,EAAS,KAAK,iBAAiB,SAAUC,CAAW,EAEpD,SAASA,EAAYC,EAAK,CACtBA,EAAI,eAAc,EACjBF,EAAS,KAAK,UAAY,GAC3B,MAAMX,EAAaa,EAAI,OAAO,SAAS,MAAM,MAAM,OAE/Cb,IAAe,IACfW,EAAS,KAAK,mBAAmB,WAAY,+BAA+B,EAC5Eb,EAAYC,EAAKC,CAAU,EACxB,KAAKc,GAAO,CACf,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,MAAM,EAE5B,OAAOA,EAAI,MACnB,CAAW,EACD,KAAMC,GAAS,CACZ,MAAMC,EAAQD,EAAK,KACfC,EAAM,SAAW,GAE9BL,EAAS,KAAK,mBAAmB,YAAaT,EAAac,CAAK,CAAC,EACjD,IAAIC,EAAe,UAAW,CAEjD,SAAU,GACV,YAAa,OACb,aAAc,MACd,gBAAiB,SACjB,aAAc,GACf,CAAM,EACQ,QAAO,GAETC,EAAS,KAAK,CACd,gBAAiB,UACjB,MAAO,GACP,aAAc,GACd,iBAAkB,QAClB,MAAO,QACP,WAAY,QACZ,QAASjB,EACT,SAAU,WACV,KAAM,iBACN,aAAc,QACd,YAAa,OACb,QAAS,4EACrB,CAAS,CAET,CAAU,EACG,MAAOkB,GAAQ,QAAQ,MAAM,eAAgBA,CAAG,CAAC,GAGtDD,EAAS,KAAK,CACV,gBAAiB,UACjB,MAAO,GACP,aAAc,GACd,iBAAkB,QAClB,MAAO,QACP,WAAY,QACZ,QAASjB,EACT,SAAU,WACV,KAAM,iBACN,aAAc,QACd,YAAa,OACb,QAAS,8BACrB,CAAS,CAIT"}